# Current time
index   # int
time    # float

# Current state info
current_state_measurement                # np.ndarray [nx]
current_state_measurement_is_unsafe      # bool
running_cost_of_traj_incl_current_state  # float

# MPPI starts with a nominal control sequence
nominal_traj_controls_before    # np.ndarray [T * nu]
nominal_traj_states_before      # np.ndarray [T * nx]

# MPPI internal details: optional to save to file,
#    but must include them in case we want to save at some point
#    Remember: Controls -> states (via simulation) -> costs, brt_values (via lookup/computation)
sample_controls                 # np.ndarray [K * T * nu]
sample_states                   # np.ndarray [K * T * nx]
sample_safety_filter_activated  # np.ndarray [K * T]
sample_costs                    # np.ndarray [K]
sample_brt_values               # np.ndarray [K * T * nx]
sample_brt_theta_deriv          # np.ndarray [K * T * nx]

# MPPI results in a nominal control sequence
nominal_traj_controls_after     # np.ndarray [T * nu]
nominal_traj_states_after       # np.ndarray [T * nx]

# Controller runtime
control_compute_time            # float

# MPPI (or filter) results in single selected control
control_chosen                      # np.ndarray [nu]
control_overridden_by_safety_filter # bool
